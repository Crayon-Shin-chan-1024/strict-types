name: Build

on:
  push:
    branches:
      - master
      - develop
      - 'v[0-9]+.[0-9]+'
  pull_request:
    branches:
      - master
      - develop
      - 'v[0-9]+.[0-9]+'

env:
  CARGO_TERM_COLOR: always

jobs:
  default:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v26
      - run: nix develop ".#stable" -c cargo check --workspace
  no-default:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v26
      - run: nix develop ".#stable" -c cargo check --workspace --no-default-features
  features:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        feature:
          - armor
          - serde
    steps:
      - uses: actions/checkout@v4
      - name: Install Nix
        uses: cachix/install-nix-action@v26
      - name: Feature ${{matrix.feature}}
        run: nix develop ".#stable" -c cargo check --no-default-features --features=${{matrix.feature}}
      - name: Feature ${{matrix.feature}}
        run: nix develop ".#stable" -c cargo check --features=${{matrix.feature}}
  platforms:
    # NOTE: Don't use nix in platform checks everything should be based on the host system
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-22.04, ubuntu-latest, macos-13, macos-latest, windows-2019, windows-latest ]
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - name: Check ${{matrix.os}}
        run: cargo check --workspace --all-features # we skip test targets here to be sure that the main library can be built
  toolchains:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        toolchain: [ nightly, beta, stable, msrv ]
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v26
      - name: Check ${{matrix.toolchain}}
        run: nix develop ".#${{ matrix.toolchain }}" -c cargo check --workspace --all-targets --all-features
